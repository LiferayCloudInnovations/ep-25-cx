def erc = "ticket-batch-importer"
def generatedFileName = "cx-values.yaml"
def generatedFilePath = layout.buildDirectory.file("liferay-client-extension-build/${generatedFileName}").get().asFile

tasks.named('createClientExtensionConfig') {
	outputs.file(generatedFilePath)
	doLast {
		generatedFilePath.getParentFile().mkdirs()
		def clientExtensionConfigContent = layout.buildDirectory.file("liferay-client-extension-build/${project.name}.client-extension-config.json").get().asFile.text.replaceAll(/[\r\n]+/, "").trim()

		def valuesYamlContent = """
clientExtensionConfig:
  configJsons:
    - |
      ${clientExtensionConfigContent}
  kind: Job
  mountInitConfig: true

env:
  LIFERAY_BATCH_OAUTH_APP_ERC: ${erc}
  LIFERAY_BATCH_CURL_OPTIONS: -v
job:
  backoffLimit: 30
podAnnotations:
  k8s.ksgate.org/list-type-batch-job-succeeded: |
      {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "name": "list-type-batch-cx-liferay-client-extension",
        "expression": "resource.status.succeeded >= 1"
      }
podSchedulingGates:
  - name: k8s.ksgate.org/list-type-batch-job-succeeded
"""

		generatedFilePath.write(valuesYamlContent)
	}
}